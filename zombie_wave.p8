pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--variable--
test1=false
local ligne_pos ={
  {138,8},
  {138,24},
  {138,40},
  {138,56},
  {138,72},
  {138,88}
}    
--variable de mon jouer
local player ={}
local liste_tourelle={}
local liste_zombies ={}
local list_bullets = {}
local liste_actor={}
local particule_list={}
--variable gameover
local game={
  state_screen ="main menu",
  timer_game = 0,
  title ="zombie wave",
  by = "jonathan",
  number_wave = 0 
}
--var screen
local screen={
  width =128 ,
  height =128
  }

--varible fire player
fire={}
--------------------------------
--function--
--rezet
function rezet ()
  player ={}
  liste_zombies ={}
  liste_actor={}
  create_player()
  create_zombie ()
end            
--ets lu une fois ho lansement du jeu
function _init()
  create_player()
  create_zombie ()
end
-----------------------gestion des colission----------------------------
--coldecor
function col_decor(p_x,p_y,p_bx,p_by)
  local bloc =mget( flr(p_x)/8+p_bx,flr(p_y)/8+p_by)
  return fget(bloc,0)
end

--col actor
function col_actor (p_a,p_b)
  if p_a==p_b then 
    return false
  end  
  
  local dx =p_a.x - p_b.x
  local dy =p_a.y - p_b.y
  if abs(dx) < (4*p_a.sprite.width) + (4*p_b.sprite.width) then
    if abs(dy) < (8*p_a.sprite.height) + (8*p_b.sprite.height) then
      return true
    end
  end
  return false
end
------------------------------------------------------------------------------------
--createplayer
function create_player()
  --init var player
  player={}
  --create actor player 
  player=create_actor("jouer")
  --velocity
  player.vx =0
  player.vy =0
  --position
  player.y =50
  player.x =0
  --moove speed
  player.moove_speed =1
--1 equivaut a 8 pixel 
  player.sprite.width =2
  player.sprite.height = 2
  
  --variable animation 
  player.animation={
    idle = {1,35},
    walk ={3,33},
    fire={},
    speed =0.1,
    state ="idle",
    timer=0,
    curent_animation ={},
    curent_frame = 1
  }
end
--cette function va gerai tou se qui concerne mon jouer 
--deplacement+animation
function update_player()

  update_animation ()
  spawn_tourelle ()
  --verfie si les touche son enffoncer 
  if btn (2) ==false and btn(3)==false then
  	player.vy =0
    return
  end

  --save old position hero
  local old_pos_player ={
     x=player.x ,
     y=player.y
    }

  --key arow up
  if btnp(2,0) then

    if player.y < (screen.height-120) then
      player.vy=0
    else
      player.vy=-1
    end
      
  end
  --touche bas 
  if btn(3) then

    if player.y > (screen.height-16) then
      player.vy=0
      
    else
      player.vy=1
    end
    
  end
  player.y += player.vy


  
end
function spawn_tourelle()

  update_animation_tourelle()

  -- va permetre de poser des tourelle a des androit pr√©cis
  if btn(1) then
    --if coin ==20 then
      local  bloc = mget(flr(player.x+8)/8,flr(player.y+4)/8)
      if fget(bloc,0) then
        --rajouter la function de creation de tourelle
        create_tourelle()
        fset(bloc,false)
      end 
    --end
  end
end
function generate_particules ( p_number_particule , p_color , p_position_x , p_position_y )

	for i = 1 , p_number_particule do
	
		local particule = create_actor("particule")
		
    particule.colore = p_color

    particule.x = p_position_x+10
    particule.y = p_position_y+8
		
    particule.vx = rnd( 2 ) - 1
		particule.vy = rnd( 2 ) - 1
		
    particule.time = 1
		particule.del = false
		
    add( particule_list , particule )
	end

end
function update_particule()
	
	for i= #particule_list,1,-1 do
		
    local particule = particule_list[i]	

		if particule.time <= 0 then

			particule.del = true;
			del(particule_list,particule)
		
    else
      --move particule    
      particule.x += particule.vx
      particule.y += particule.vy

			particule.time -= 0.3
		
    end
	end
end

function update_animation_tourelle()
  for i=1,#liste_tourelle do
   
    local tourelle = liste_tourelle[i]

    if tourelle.animation.timer <= 0  then
      --fixe timer
      tourelle.animation.timer = 1
      
      if tourelle.animation.curent_frame < #tourelle.animation.curent_animation then
        
        tourelle.animation.curent_frame +=1
    
      else
      
        tourelle.animation.curent_frame = 1
        create_fire(tourelle.x+8,tourelle.y-1)
        generate_particules ( 8 , 10 ,tourelle.x+8  , tourelle.y-1)
      end	
    else
      tourelle.animation.timer -= tourelle.animation.speed
    end
  end  
end
--mais a jour lanimation du jouer 
function update_animation ()
    --chek animation 
  if player.vy ~= 0 then

    player.animation.state ="walk"

  elseif player.vy == 0 then

    player.animation.state ="idle"

  end      
      --selection d'animation
  if player.animation.state == "idle" then
  	
    player.animation.curent_animation = player.animation.idle

  elseif  player.animation.state == "walk" then

    player.animation.curent_animation = player.animation.walk

  end	
  --apllique l'animation
  if player.animation.timer <= 0  then
    --fixe timer
    player.animation.timer = 1
  	
    if player.animation.curent_frame < #player.animation.curent_animation then
  		
  		player.animation.curent_frame +=1
 	 
    else
 	   
 	 	  player.animation.curent_frame = 1
    end	
  else
     player.animation.timer -= player.animation.speed
  end
  
end
--create tir 
function create_fire (p_x,p_y)
  local fire =create_actor("fire")
  fire.speed = 2
  fire.x=p_x+4
  fire.y=p_y+4
  fire.sprite.width =1
  fire.sprite.height = 1
  fire.animation.idle={6}
  fire.animation.curent_animation = fire.animation.idle
  add(list_bullets,fire)
end
--mise a jour du fire et de ces degat
function update_bullets()

  for n=#list_bullets,1,-1 do
    
    local bullet = list_bullets[n]
    
    --if bullet exit the screen
    if bullet.x > 130 then
      --fixe destroy bullet
      bullet.del=true
    
      --if it don't exit the screen
    elseif bullet.x <= 130 then

      for a=#liste_zombies,1,-1 do
        
        local zombie = liste_zombies[a]
        --check collision bullet wicht zombi
        if col_actor(bullet,zombie) then
          --generate blood
          generate_particules( 8 , 8  , bullet.x , bullet.y )
          zombie.life -=1 
          
          if zombie.life <=0 then
            --fixe destroy bullet and zombi
            bullet.del=true 
            zombie.del=true
          --dell zombi to the liste 
            del(liste_zombies,zombie)
          --if zombi is the life 
          elseif zombie.life >0 then
            --destroy bullet only  
            bullet.del=true  
          end  
        end  
      end
      --move bullet
      bullet.x += bullet.speed
      --delete bullet
      if bullet.del == true then
        del(list_bullets,bullet)
      end 
    end
  end
end
function create_tourelle()
  local tourelle =create_actor("tourelle")
  
  --add animation tourelle
  tourelle.animation.state ="fire"
  tourelle.animation.fire={43,45}
  tourelle.animation.curent_frame =1
  tourelle.animation.curent_animation = tourelle.animation.fire
  --sieze sprite
  tourelle.sprite.width =2
  tourelle.sprite.height =2
  --positione tourelle
  tourelle.x = player.x+8
  tourelle.y = player.y-8

  add(liste_tourelle,tourelle)
  
  end
--createzombie
function create_zombie ()
 local ligne =0
 local number_zombie =0 
 
if #liste_zombies ==0  then
  
  if game.number_wave < 4 then
    
    ligne = rnd(#ligne_pos)
    number_zombie = rnd(5) 
    spawnumber_zombie(flr(ligne),number_zombie)
    game.number_wave +=1
  
  elseif game.number_wave <8 and game.number_wave >=4 then
    ligne = rnd(#ligne_pos)
    number_zombie = rnd(5)
    spawnumber_zombie(flr(ligne),number_zombie)
     
    ligne = rnd(#ligne_pos)
    number_zombie = rnd(5)
    spawnumber_zombie(flr(ligne),number_zombie)
    
    game.number_wave +=1
  elseif game.number_wave >=8  then 
    ligne = rnd(#ligne_pos)
    number_zombie = rnd(5)
    spawnumber_zombie(flr(ligne),number_zombie)
    
    ligne = rnd(#ligne_pos)
    number_zombie = rnd(5)
    spawnumber_zombie(flr(ligne),number_zombie)
    
      ligne =  rnd(#ligne_pos)
    number_zombie = rnd(5)
    spawnumber_zombie(flr(ligne),number_zombie)
    
    ligne =  rnd(#ligne_pos)
    number_zombie = rnd(5)
    spawnumber_zombie(flr(ligne),number_zombie)
    
    ligne = rnd(#ligne_pos)
    number_zombie = rnd(5)
    spawnumber_zombie(flr(ligne),number_zombie)
    game.number_wave +=1
  end  
end

end
--function spawn zombie
function spawnumber_zombie(p_ligne,p_n_liste_zombies)


  if p_ligne ==0then
   p_ligne =1
  end

  for n=1,p_n_liste_zombies do
    
    local zombie = create_actor("zombie")
    
    zombie.speed =rnd(0.7)
    
    if  zombie.speed <0.2 then
        zombie.speed =0.4
    end
    
    zombie.life = 3
    
    if game.number_wave >8 then
      zombie.life = 3 + (game.number_wave /9)
    end  

    zombie.animation.state ="walk"
    zombie.animation.walk={37,39,41}
    zombie.animation.curent_animation = zombie.animation.walk
    
    zombie.sprite.width = 2
    zombie.sprite.height = 2
    
    zombie.x=ligne_pos[p_ligne][1]
    zombie.y=ligne_pos[p_ligne][2]-8
    
    add(liste_zombies,zombie)
  end
end
--mise a jour des zonbies
function update_zombie ()

  for a=#liste_zombies,1,-1 do

    local zombie = liste_zombies[a]
  
    if zombie.animation.state =="walk" then
  
      if zombie.x>0 then
  
        zombie.x-=zombie.speed
        update_animationumber_zombie(zombie)
      else
  
        game.state_screen = "gameover"
  
      end
    end
  end
end

function update_animationumber_zombie(p_zombie)
  --apllique l'animation
  if p_zombie.animation.timer <= 0  then
    --fixe timer
    p_zombie.animation.timer = 1
  	
    if p_zombie.animation.curent_frame < #p_zombie.animation.curent_animation then
  		
  		p_zombie.animation.curent_frame +=1
 	 
    else
 	   
 	 	  p_zombie.animation.curent_frame = 1
    end	
  else
    p_zombie.animation.timer -= p_zombie.animation.speed
  end
end


--et lu 30 fois par segonde
function _update()

  if game.state_screen =="play" then
    
    update_player()
    update_zombie ()
    update_bullets()
    update_particule()
    create_zombie ()

      --on fire si on apuis sur la touche 4
    if btnp(4) then
      create_fire (player.x+4,player.y)
    end

    if btnp(5) then
      game.state_screen ="pause"
    end

  elseif  game.state_screen =="main menu" then
    
    if btnp(2) then
      game.state_screen ="play"
    end  
  
  elseif  game.state_screen =="gameover" then
    
    if btnp(2)then
      game.state_screen ="main menu"
      rezet ()
    end
  
  elseif  game.state_screen =="pause" then
    
    if btnp(5) then
      game.state_screen ="play"
    end
    
  end
end



-- function qui dessine a l'ecran
function _draw()

  cls()

  if game.state_screen =="play" or game.state_screen =="pause" then

     draw_map()
 	   draw_actor()
     print ("nombre de vague: "..game.number_wave,0,120)
    -- print(player.animation.state,0,120)

  elseif game.state_screen =="main menu" then

     draw_menu()
  elseif game.state_screen =="gameover" then

    draw_gameover ()
  end

  --print( col_decor(player.x,player.y,1,0))
end
--draw map
function draw_map()
    map(0,0,0,0,16,16)
  end

function draw_menu()
  game.timer_game-=0.1
  map(35,0,0,0,16,16)
  if game.timer_game <=0.5 and game.timer_game >0 then
    print("press star",45,64,11)
  elseif game.timer_game <=0 then
    game.timer_game = 1
  end
    print("pour commencer la partie",16,75,12)

end
function draw_gameover ()
    map(18,0,0,0,16,16)
end

--dessiner les actor
function draw_actor ()

  for l=#liste_actor,1,-1 do
    local actor = liste_actor[l]
    if(actor.type~="particule") then
      spr(actor.animation.curent_animation[actor.animation.curent_frame],actor.x,actor.y,actor.sprite.width,actor.sprite.height)
    else
 
      circfill(actor.x,actor.y,1,actor.colore )

    end  
    if actor.del == true then
      del(liste_actor, actor)
    end   
  end

end
--usine a actor
function create_actor (p_type)
  local actor ={}
  actor.x=0
  actor.y=0
  actor.type=p_type
  actor.w=0
  actor.h=0
  actor.sprite = { width = 0 ,height =0}

  actor.del =false
  add(liste_actor,actor)
  actor.animation={
    idle = {},
    speed =0.1,
    state ="idle",
    timer=0,
    curent_animation ={},
    curent_frame = 1
  }
  return actor

end

__gfx__
00000000000000000000000000000000000000000888880000000000002220001111111111111111111111103337733333333333333333330000000000000000
00000000088888000000000008888800000000000fffff0000000000033323001441444144441444188888803337733333333333333333330000000000000000
00700700088888000000000008888800000000000f1f1f005aaaa500031313001111111111111111188888803337733333333333333333330000000000000000
000770000f1f1f00000000000f1f1f00000000000fffff00995959a003213300141ccccccccccccc18777780333773333333333333b333b30000000000000000
000770000fffff00000000000fffff000000000000111410555555100f332f00141ccccccccccccc18888880333773333333333333b3b3b30000000000000000
0070070044fff4ff5000000044fff4ff50000000004cc00011111100003330001111111111111111188888803337733333333333333333330000000000000000
00000000444455555f550000444455555f55000000c0c00000000000002330001411444144441444188888803337733333333333333333330000000000000000
00000000ff445555fff00000ff445555fff0000000c0c0000000000000f3f0001111111111111111000000003337733333333333333333330000000000000000
00000000fffffff000000000fffffff0000000001111111011111110111111101111111011111110000000000000000000000000000000000000000000000000
00000000fffffff000000000fffffff0000000008888888088888880888888808888888088888880000000000000000000000000000000000000000000000000
000000000cc0cc00000000000cc0cc00000000008888888088888880888777808787778087777780000000000000000000000000000000000000000000000000
000000000cc0cc00000000000cc09950000000008777878087878780888788808787878087878780000000000000000000000000000000000000000000000000
00000000099599500000000009959555100000008787878087878780877788808777878087778780000000000000000000000000000000000000000000000000
00000000195595551000000019555111000000008787778087777780888888808888888088888880000000000000000000000000000000000000000000000000
00000000011111110000000001111110000000008888888088888880888888808888888088888880000000000000000000000000000000000000000000000000
00000000001111100000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000011111000000000001111100000000000111110000000000000000000000000000000000000000000000
00000000088888000000000000000000000000000000013331000000000001333100000000000133310000000000000000000000000000000000000000000000
00000000088888000000000008888800000000000000033333000000000003333300000000000333330000000000000000000000000000000000000000000000
000000000f1f1f000000000008888800000000000000031313000000000003131300000000000313130000000000000000000000000000000000000000000000
000000000fffff00000000000f1f1f00000000000000033333000000000003333300000000000333330000000066666000000000066666000000000000000000
0000000044fff4ff500000000fffff00000000000000003130000000000000313000000000000031300000000044555500000000044555500000000000000000
00000000444455555f55000044fff4ff500000000000005550000000000000555000000000000055500000000044555556655560044555556655560000000000
00000000ff445555fff00000444455555f5500000f333555530000000f333555530000000f333555530000000011555555510000011555555510000000000000
00000000fffffff000000000ff445555fff000000000f333330000000000f333330000000000f333330000000000114414000000000011441400000000000000
00000000fffffff000000000fffffff0000000000000004940000000000000494000000000000049400000000000015551000000000001555100000000000000
000000000cc0cc0000000000fffffff000000000000000c0c0000000000000c0c0000000000000c0c00000000000050505000000000005050500000000000000
000000000995cc00000000000cc0cc0000000000000000c0c0000000000000c0c0000000000000c0c00000000000500500500000000050050050000000000000
0000000019559950000000000995995000000000000000c0cc000000000000c0c0000000000000ccc00000000005000500050000000500050005000000000000
00000000011195551000000019559555000000000000000004400000000000404000000000000004400000000050000500005000005000050000500000000000
00000000001111110000000001111111000000000000000011410000000014444100000000001044410000001511111511111500151111151111150000000000
00000000000011100000000000000000000000000000000011100000000001111000000000000011110000005111111511111151511111151111115100000000
00033333333330000000333333300000033300000003330003333333333330000003333333330000000000000000000003333333333000000000000000000000
00033333333330000000333333300000033330000033330003333333333330000333333333333300000000000000000003333333333000000000000000000000
00033333333330000333333333333300033033000330330003300000000000000330000000003300333000000000033303333333333333000000000000000000
03330000000000000333000000033300033003303300330003300000000000000330000000003300333000000000033303300000000333000000000000000000
03330000000000000333000000033300033000333000330003300000000000000330000000003300033300000000033003300000000333000000000000000000
03330000000000000333000000033300033000000000330003300000000000000330000000003300003330000000033003300000000333000000000000000000
03330000000000000333000000033300033000000000330003300000000000000330000000003300000330000000333003300000000333000000000000000000
03330000000000000333000000033300033000000000330003333333333330000330000000003300000333000000330003300000000333000000000000000000
03330003333333000333333333333300033000000000330003333333333330000330000000003300000033000003330003333333333000000000000000000000
03330003333333000333333333333300033000000000330003300000000000000330000000003300000033300003300003333333333000000000000000000000
03330003333333000333333333333300033000000000330003300000000000000330000000003300000003330033300003333333333000000000000000000000
03330000000033000333000000033300033000000000330003300000000000000330000000003300000003330033000003300000000333000000000000000000
03330000000033000333000000033300033000000000330003300000000000000330000000003300000000330030000003300000000333000000000000000000
03330000000033000333000000033300033000000000330003300000000000000330000000003300000000033330000003300000000333000000000000000000
03333333333333000333000000033300033000000000330003333333333333000333333333333300000000033300000003300000000333000000000000000000
00003333333333000333000000033300033000000000330003333333333333000003333333330000000000003300000003300000000333000000000000000000
__gff__
0000000000000000010101000000000000000000000101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0c0c0809090909090909090909090909090c0809090909090909090909090909090000080909090909090909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0a0c0c0c0c0d0c0c0c0c0c0c0c0c0c0c0c0800000000000000000000000000080000080000000000000000000000000000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0809090909090909090909090909090c0800000000000000000000000000080000080007000700000000000007000700080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b150c0c0c0d0c0c0c0c0c0d0c0c0d0c0c0c080000000000000000000000004e080000080000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0809090909090909090909090909090c0800000000000000000000007b5e080000080000000025260000252600000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b160c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0800000000000000000000007b4e080000080102060600360000353600252600080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0809090909090909090909090909090c080000004041424344454647005e080000081100002526002526000000353600080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b170c0d0c0c0c0c0c0d0c0c0c0c0c0c0c0c0800000050515253545556570000080082080000003536843536840000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0809090909090909090909090909090c0800000048494a4b46474c4d0000080082080000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b180c0c0c0d0c0c0c0c0c0c0c0c0c0c0c0c0800000058595a5b56575c5d00000800000800000000888689828a8882810000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0809090909090909090909090909090c0800000000000000000000000000080000080000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b190c0d0c0c0c0c0c0c0c0c0d0c0c0c0c0c0800000000000000000000000000080000080000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0c0809090909090909090909090909090c0800000000000000000000000000080000080000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000800000000000000000000000000080000080000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000800000000000000000000000000080000080000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000809090909090909090909090909090000080909090909090909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
